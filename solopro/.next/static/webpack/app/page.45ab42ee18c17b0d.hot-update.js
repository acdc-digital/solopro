"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/services/PaymentService.ts":
/*!****************************************!*\
  !*** ./lib/services/PaymentService.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkSubscriptionStatus: () => (/* binding */ checkSubscriptionStatus),\n/* harmony export */   createCheckoutSession: () => (/* binding */ createCheckoutSession),\n/* harmony export */   getCheckoutSession: () => (/* binding */ getCheckoutSession)\n/* harmony export */ });\n/**\n * PaymentService - Handles payment-related operations\n */ /**\n * Creates a checkout session with Stripe\n * @param priceId The Stripe Price ID\n * @param paymentMode The payment mode ('payment' for one-time, 'subscription' for recurring)\n * @param embeddedCheckout Whether to use embedded checkout (true) or redirect checkout (false)\n * @returns Object containing the checkout URL or client secret\n */ async function createCheckoutSession(priceId) {\n    let paymentMode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'payment', embeddedCheckout = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;\n    try {\n        console.log(\"Creating checkout session for price ID: \".concat(priceId, \" with mode: \").concat(paymentMode, \", embedded: \").concat(embeddedCheckout));\n        const response = await fetch('/api/create-checkout-session', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                priceId,\n                paymentMode,\n                embeddedCheckout\n            })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            console.error('Checkout session creation failed:', data);\n            throw new Error(data.error || 'Failed to create checkout session');\n        }\n        console.log('Checkout session created successfully');\n        if (data.url) {\n            console.log('Checkout URL provided:', data.url.substring(0, 50) + '...');\n        } else if (data.clientSecret) {\n            console.log('Client secret provided for embedded checkout');\n        } else {\n            console.warn('No checkout URL or client secret provided in response');\n        }\n        return data;\n    } catch (error) {\n        console.error('Payment service error:', error);\n        throw error;\n    }\n}\n/**\n * Retrieves a checkout session by ID\n * @param sessionId The Stripe Checkout Session ID\n * @returns The checkout session details\n */ async function getCheckoutSession(sessionId) {\n    try {\n        console.log(\"Retrieving checkout session with ID: \".concat(sessionId));\n        const response = await fetch(\"/api/get-checkout-session?session_id=\".concat(sessionId), {\n            method: 'GET'\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            console.error('Checkout session retrieval failed:', data);\n            throw new Error(data.error || 'Failed to retrieve checkout session');\n        }\n        console.log('Checkout session retrieved successfully');\n        return data;\n    } catch (error) {\n        console.error('Payment service error:', error);\n        throw error;\n    }\n}\n/**\n * Handles subscription status checking\n * @param sessionId The Stripe Checkout Session ID\n */ async function checkSubscriptionStatus(sessionId) {\n    try {\n        console.log(\"Checking subscription status for session ID: \".concat(sessionId));\n        const response = await fetch(\"/api/check-subscription-status?session_id=\".concat(sessionId), {\n            method: 'GET'\n        });\n        const data = await response.json();\n        if (!response.ok) {\n            console.error('Subscription status check failed:', data);\n            throw new Error(data.error || 'Failed to check subscription status');\n        }\n        console.log('Subscription status retrieved successfully:', data.status);\n        return data;\n    } catch (error) {\n        console.error('Payment service error:', error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zZXJ2aWNlcy9QYXltZW50U2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Q0FFQyxHQUVEOzs7Ozs7Q0FNQyxHQUNNLGVBQWVBLHNCQUNwQkMsT0FBZTtRQUNmQyxjQUFBQSxpRUFBMEMsV0FDMUNDLG1CQUFBQSxpRUFBNEI7SUFFNUIsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUMsMkNBQWlFSCxPQUF0QkQsU0FBUSxnQkFBd0NFLE9BQTFCRCxhQUFZLGdCQUErQixPQUFqQkM7UUFFdkcsTUFBTUcsV0FBVyxNQUFNQyxNQUFNLGdDQUFnQztZQUMzREMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQUVYO2dCQUFTQztnQkFBYUM7WUFBaUI7UUFDaEU7UUFFQSxNQUFNVSxPQUFPLE1BQU1QLFNBQVNRLElBQUk7UUFFaEMsSUFBSSxDQUFDUixTQUFTUyxFQUFFLEVBQUU7WUFDaEJYLFFBQVFZLEtBQUssQ0FBQyxxQ0FBcUNIO1lBQ25ELE1BQU0sSUFBSUksTUFBTUosS0FBS0csS0FBSyxJQUFJO1FBQ2hDO1FBRUFaLFFBQVFDLEdBQUcsQ0FBQztRQUNaLElBQUlRLEtBQUtLLEdBQUcsRUFBRTtZQUNaZCxRQUFRQyxHQUFHLENBQUMsMEJBQTBCUSxLQUFLSyxHQUFHLENBQUNDLFNBQVMsQ0FBQyxHQUFHLE1BQU07UUFDcEUsT0FBTyxJQUFJTixLQUFLTyxZQUFZLEVBQUU7WUFDNUJoQixRQUFRQyxHQUFHLENBQUM7UUFDZCxPQUFPO1lBQ0xELFFBQVFpQixJQUFJLENBQUM7UUFDZjtRQUVBLE9BQU9SO0lBQ1QsRUFBRSxPQUFPRyxPQUFPO1FBQ2RaLFFBQVFZLEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE1BQU1BO0lBQ1I7QUFDRjtBQUVBOzs7O0NBSUMsR0FDTSxlQUFlTSxtQkFBbUJDLFNBQWlCO0lBQ3hELElBQUk7UUFDRm5CLFFBQVFDLEdBQUcsQ0FBQyx3Q0FBa0QsT0FBVmtCO1FBRXBELE1BQU1qQixXQUFXLE1BQU1DLE1BQU0sd0NBQWtELE9BQVZnQixZQUFhO1lBQ2hGZixRQUFRO1FBQ1Y7UUFFQSxNQUFNSyxPQUFPLE1BQU1QLFNBQVNRLElBQUk7UUFFaEMsSUFBSSxDQUFDUixTQUFTUyxFQUFFLEVBQUU7WUFDaEJYLFFBQVFZLEtBQUssQ0FBQyxzQ0FBc0NIO1lBQ3BELE1BQU0sSUFBSUksTUFBTUosS0FBS0csS0FBSyxJQUFJO1FBQ2hDO1FBRUFaLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU9RO0lBQ1QsRUFBRSxPQUFPRyxPQUFPO1FBQ2RaLFFBQVFZLEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE1BQU1BO0lBQ1I7QUFDRjtBQUVBOzs7Q0FHQyxHQUNNLGVBQWVRLHdCQUF3QkQsU0FBaUI7SUFDN0QsSUFBSTtRQUNGbkIsUUFBUUMsR0FBRyxDQUFDLGdEQUEwRCxPQUFWa0I7UUFFNUQsTUFBTWpCLFdBQVcsTUFBTUMsTUFBTSw2Q0FBdUQsT0FBVmdCLFlBQWE7WUFDckZmLFFBQVE7UUFDVjtRQUVBLE1BQU1LLE9BQU8sTUFBTVAsU0FBU1EsSUFBSTtRQUVoQyxJQUFJLENBQUNSLFNBQVNTLEVBQUUsRUFBRTtZQUNoQlgsUUFBUVksS0FBSyxDQUFDLHFDQUFxQ0g7WUFDbkQsTUFBTSxJQUFJSSxNQUFNSixLQUFLRyxLQUFLLElBQUk7UUFDaEM7UUFFQVosUUFBUUMsR0FBRyxDQUFDLCtDQUErQ1EsS0FBS1ksTUFBTTtRQUN0RSxPQUFPWjtJQUNULEVBQUUsT0FBT0csT0FBTztRQUNkWixRQUFRWSxLQUFLLENBQUMsMEJBQTBCQTtRQUN4QyxNQUFNQTtJQUNSO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3c2ltb24vRG9jdW1lbnRzL0dpdGh1Yi9zb2xvcHJvL3NvbG9wcm8vbGliL3NlcnZpY2VzL1BheW1lbnRTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGF5bWVudFNlcnZpY2UgLSBIYW5kbGVzIHBheW1lbnQtcmVsYXRlZCBvcGVyYXRpb25zXG4gKi9cblxuLyoqXG4gKiBDcmVhdGVzIGEgY2hlY2tvdXQgc2Vzc2lvbiB3aXRoIFN0cmlwZVxuICogQHBhcmFtIHByaWNlSWQgVGhlIFN0cmlwZSBQcmljZSBJRFxuICogQHBhcmFtIHBheW1lbnRNb2RlIFRoZSBwYXltZW50IG1vZGUgKCdwYXltZW50JyBmb3Igb25lLXRpbWUsICdzdWJzY3JpcHRpb24nIGZvciByZWN1cnJpbmcpXG4gKiBAcGFyYW0gZW1iZWRkZWRDaGVja291dCBXaGV0aGVyIHRvIHVzZSBlbWJlZGRlZCBjaGVja291dCAodHJ1ZSkgb3IgcmVkaXJlY3QgY2hlY2tvdXQgKGZhbHNlKVxuICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgdGhlIGNoZWNrb3V0IFVSTCBvciBjbGllbnQgc2VjcmV0XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVDaGVja291dFNlc3Npb24oXG4gIHByaWNlSWQ6IHN0cmluZywgXG4gIHBheW1lbnRNb2RlOiAncGF5bWVudCcgfCAnc3Vic2NyaXB0aW9uJyA9ICdwYXltZW50JyxcbiAgZW1iZWRkZWRDaGVja291dDogYm9vbGVhbiA9IHRydWVcbikge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKGBDcmVhdGluZyBjaGVja291dCBzZXNzaW9uIGZvciBwcmljZSBJRDogJHtwcmljZUlkfSB3aXRoIG1vZGU6ICR7cGF5bWVudE1vZGV9LCBlbWJlZGRlZDogJHtlbWJlZGRlZENoZWNrb3V0fWApO1xuICAgIFxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvY3JlYXRlLWNoZWNrb3V0LXNlc3Npb24nLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHByaWNlSWQsIHBheW1lbnRNb2RlLCBlbWJlZGRlZENoZWNrb3V0IH0pLFxuICAgIH0pO1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdDaGVja291dCBzZXNzaW9uIGNyZWF0aW9uIGZhaWxlZDonLCBkYXRhKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihkYXRhLmVycm9yIHx8ICdGYWlsZWQgdG8gY3JlYXRlIGNoZWNrb3V0IHNlc3Npb24nKTtcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZygnQ2hlY2tvdXQgc2Vzc2lvbiBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpO1xuICAgIGlmIChkYXRhLnVybCkge1xuICAgICAgY29uc29sZS5sb2coJ0NoZWNrb3V0IFVSTCBwcm92aWRlZDonLCBkYXRhLnVybC5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicpO1xuICAgIH0gZWxzZSBpZiAoZGF0YS5jbGllbnRTZWNyZXQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdDbGllbnQgc2VjcmV0IHByb3ZpZGVkIGZvciBlbWJlZGRlZCBjaGVja291dCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLndhcm4oJ05vIGNoZWNrb3V0IFVSTCBvciBjbGllbnQgc2VjcmV0IHByb3ZpZGVkIGluIHJlc3BvbnNlJyk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBkYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1BheW1lbnQgc2VydmljZSBlcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuLyoqXG4gKiBSZXRyaWV2ZXMgYSBjaGVja291dCBzZXNzaW9uIGJ5IElEXG4gKiBAcGFyYW0gc2Vzc2lvbklkIFRoZSBTdHJpcGUgQ2hlY2tvdXQgU2Vzc2lvbiBJRFxuICogQHJldHVybnMgVGhlIGNoZWNrb3V0IHNlc3Npb24gZGV0YWlsc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q2hlY2tvdXRTZXNzaW9uKHNlc3Npb25JZDogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coYFJldHJpZXZpbmcgY2hlY2tvdXQgc2Vzc2lvbiB3aXRoIElEOiAke3Nlc3Npb25JZH1gKTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2dldC1jaGVja291dC1zZXNzaW9uP3Nlc3Npb25faWQ9JHtzZXNzaW9uSWR9YCwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICB9KTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc29sZS5lcnJvcignQ2hlY2tvdXQgc2Vzc2lvbiByZXRyaWV2YWwgZmFpbGVkOicsIGRhdGEpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGRhdGEuZXJyb3IgfHwgJ0ZhaWxlZCB0byByZXRyaWV2ZSBjaGVja291dCBzZXNzaW9uJyk7XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coJ0NoZWNrb3V0IHNlc3Npb24gcmV0cmlldmVkIHN1Y2Nlc3NmdWxseScpO1xuICAgIHJldHVybiBkYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1BheW1lbnQgc2VydmljZSBlcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuLyoqXG4gKiBIYW5kbGVzIHN1YnNjcmlwdGlvbiBzdGF0dXMgY2hlY2tpbmdcbiAqIEBwYXJhbSBzZXNzaW9uSWQgVGhlIFN0cmlwZSBDaGVja291dCBTZXNzaW9uIElEXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja1N1YnNjcmlwdGlvblN0YXR1cyhzZXNzaW9uSWQ6IHN0cmluZykge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKGBDaGVja2luZyBzdWJzY3JpcHRpb24gc3RhdHVzIGZvciBzZXNzaW9uIElEOiAke3Nlc3Npb25JZH1gKTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2NoZWNrLXN1YnNjcmlwdGlvbi1zdGF0dXM/c2Vzc2lvbl9pZD0ke3Nlc3Npb25JZH1gLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgIH0pO1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdTdWJzY3JpcHRpb24gc3RhdHVzIGNoZWNrIGZhaWxlZDonLCBkYXRhKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihkYXRhLmVycm9yIHx8ICdGYWlsZWQgdG8gY2hlY2sgc3Vic2NyaXB0aW9uIHN0YXR1cycpO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKCdTdWJzY3JpcHRpb24gc3RhdHVzIHJldHJpZXZlZCBzdWNjZXNzZnVsbHk6JywgZGF0YS5zdGF0dXMpO1xuICAgIHJldHVybiBkYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1BheW1lbnQgc2VydmljZSBlcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn0gIl0sIm5hbWVzIjpbImNyZWF0ZUNoZWNrb3V0U2Vzc2lvbiIsInByaWNlSWQiLCJwYXltZW50TW9kZSIsImVtYmVkZGVkQ2hlY2tvdXQiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJqc29uIiwib2siLCJlcnJvciIsIkVycm9yIiwidXJsIiwic3Vic3RyaW5nIiwiY2xpZW50U2VjcmV0Iiwid2FybiIsImdldENoZWNrb3V0U2Vzc2lvbiIsInNlc3Npb25JZCIsImNoZWNrU3Vic2NyaXB0aW9uU3RhdHVzIiwic3RhdHVzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/services/PaymentService.ts\n"));

/***/ })

});