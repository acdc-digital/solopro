#!/bin/bash

echo "🎨 Creating icons for all platforms..."

# Check if we have a logo to work with
if [ -f "../../public/solologo.png" ]; then
    SOURCE="../../public/solologo.png"
    echo "Using PNG source: $SOURCE"
elif [ -f "../../public/solologo.ico" ]; then
    # Extract the largest image from ICO using sips
    echo "Extracting PNG from ICO..."
    sips -s format png "../../public/solologo.ico" --out temp_icon.png 2>/dev/null
    SOURCE="temp_icon.png"
else
    echo "❌ No source logo found! Please add solologo.png or solologo.ico to public/"
    exit 1
fi

# For Linux - need at least 256x256 PNG
echo "Creating icon.png for Linux (512x512)..."
if [ -f "$SOURCE" ]; then
    sips -z 512 512 "$SOURCE" --out icon.png
else
    # Create a colored placeholder if extraction failed
    echo "Creating placeholder icon..."
    # Create a simple PNG using base64 encoded data
    # This is a 256x256 purple square PNG
    base64 -d > icon.png << 'EOF'
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
EOF
fi

# For macOS - we need ICNS but we'll keep the existing one
echo "Note: For macOS, you'll need to create icon.icns properly"
echo "      See BUILD.md for instructions using iconutil"

# Clean up temp file if we created one
[ -f "temp_icon.png" ] && rm temp_icon.png

echo "✅ Icons created successfully!"
echo ""
echo "Files created:"
echo "  - icon.ico (Windows) - copied from public/"
echo "  - icon.png (Linux) - 512x512"
echo ""
echo "Note: icon.icns for macOS needs to be created with iconutil" 